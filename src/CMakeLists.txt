# Collect all of the files needed to build the `cat` library in
# `../CMakeLists.txt`.

set(CATLIB ${CMAKE_SOURCE_DIR}/src/libraries)

target_include_directories(cat INTERFACE
  ${CMAKE_SOURCE_DIR}/src/
  ${CATLIB}/meta/
  ${CATLIB}/compare/
  ${CATLIB}/limits
  ${CATLIB}/runtime/
  ${CATLIB}/cpuid/
  ${CATLIB}/sanitizer/
  ${CATLIB}/arithmetic/
  ${CATLIB}/initializer_list/
  ${CATLIB}/simd/
  ${CATLIB}/algorithm/
  ${CATLIB}/debug/
  ${CATLIB}/variant/
  ${CATLIB}/scaredy/
  ${CATLIB}/maybe/
  ${CATLIB}/match/
  ${CATLIB}/notype/
  ${CATLIB}/unique/
  ${CATLIB}/collection/
  ${CATLIB}/array/
  ${CATLIB}/span/
  ${CATLIB}/list/
  ${CATLIB}/string/
  ${CATLIB}/tui/
  ${CATLIB}/format/
  ${CATLIB}/memory/
  ${CATLIB}/allocator/
  ${CATLIB}/utility/
  ${CATLIB}/functional/
  ${CATLIB}/file/
  ${CATLIB}/linux/
  ${CATLIB}/thread/
  ${CATLIB}/atomic/
  ${CATLIB}/socket/
  ${CATLIB}/x11/
  ${CATLIB}/bit/
  ${CATLIB}/bitset/
  ${CATLIB}/iterator/
  ${CATLIB}/math/
  ${CATLIB}/type_list/
  ${CATLIB}/tuple/
  ${CATLIB}/cast/
  ${CATLIB}/vec/
  ${CATLIB}/ring/
  ${CATLIB}/enum/
)

# TODO: Group and annotate these lines by their corresponding header.
target_sources(cat INTERFACE
  ${CATLIB}/runtime/implementations/_start.cpp
  ${CATLIB}/runtime/implementations/exit.cpp
  ${CATLIB}/runtime/implementations/__stack_chk_fail.cpp
  ${CATLIB}/runtime/implementations/__cxa_atexit.cpp
  ${CATLIB}/runtime/implementations/__cxa_pure_virtual.cpp
  ${CATLIB}/runtime/implementations/setjmp.cpp
  ${CATLIB}/runtime/implementations/longjmp.cpp
  ${CATLIB}/runtime/implementations/load_base_stack_pointer.cpp
  ${CATLIB}/new/implementations/new.cpp
  ${CATLIB}/simd/implementations/is_avx2_supported.cpp
  ${CATLIB}/simd/implementations/is_avx512f_supported.cpp
  ${CATLIB}/simd/implementations/is_avx_supported.cpp
  ${CATLIB}/simd/implementations/is_mmx_supported.cpp
  ${CATLIB}/simd/implementations/is_sse1_supported.cpp
  ${CATLIB}/simd/implementations/is_sse2_supported.cpp
  ${CATLIB}/simd/implementations/is_sse3_supported.cpp
  ${CATLIB}/simd/implementations/is_sse4_1_supported.cpp
  ${CATLIB}/simd/implementations/is_sse4_2_supported.cpp
  ${CATLIB}/simd/implementations/is_sse3_supported.cpp
  ${CATLIB}/simd/implementations/sfence.cpp
  ${CATLIB}/simd/implementations/zero_avx_registers.cpp
  ${CATLIB}/simd/implementations/zero_upper_avx_registers.cpp
  ${CATLIB}/memory/implementations/copy_memory.cpp
  ${CATLIB}/memory/implementations/copy_memory_small.cpp
  ${CATLIB}/string/implementations/memcpy.cpp
  ${CATLIB}/string/implementations/memset.cpp
  ${CATLIB}/string/implementations/compare_strings.cpp
  ${CATLIB}/string/implementations/print.cpp
  ${CATLIB}/string/implementations/println.cpp
  ${CATLIB}/string/implementations/eprint.cpp
  ${CATLIB}/string/implementations/eprintln.cpp
  ${CATLIB}/format/implementations/itoa_jeaiii.cpp
  ${CATLIB}/format/implementations/ftoa_dragonbox.cpp
  ${CATLIB}/linux/implementations/syscall0.cpp
  ${CATLIB}/linux/implementations/syscall1.cpp
  ${CATLIB}/linux/implementations/syscall2.cpp
  ${CATLIB}/linux/implementations/syscall3.cpp
  ${CATLIB}/linux/implementations/syscall4.cpp
  ${CATLIB}/linux/implementations/syscall5.cpp
  ${CATLIB}/linux/implementations/syscall6.cpp
  ${CATLIB}/linux/implementations/sys_read.cpp
  ${CATLIB}/linux/implementations/sys_write.cpp
  ${CATLIB}/linux/implementations/sys_close.cpp
  ${CATLIB}/linux/implementations/clonearguments.cpp
  ${CATLIB}/linux/implementations/sys_open.cpp
  ${CATLIB}/linux/implementations/sys_rt_sigprocmask.cpp
  ${CATLIB}/linux/implementations/sys_unlink.cpp
  ${CATLIB}/linux/implementations/sys_mmap.cpp
  ${CATLIB}/linux/implementations/sys_munmap.cpp
  ${CATLIB}/linux/implementations/sys_wait4.cpp
  ${CATLIB}/linux/implementations/wait_pid.cpp
  ${CATLIB}/linux/implementations/sys_waitid.cpp
  ${CATLIB}/linux/implementations/sys_clone.cpp
  ${CATLIB}/linux/implementations/sys_socket.cpp
  ${CATLIB}/linux/implementations/create_socket_local.cpp
  ${CATLIB}/linux/implementations/is_a_tty.cpp
  ${CATLIB}/linux/implementations/tty_get_attributes.cpp
  ${CATLIB}/linux/implementations/tty_set_attributes.cpp
  ${CATLIB}/linux/implementations/sys_ioctl.cpp
  ${CATLIB}/linux/implementations/sys_getpid.cpp
  ${CATLIB}/linux/implementations/read_char.cpp
  ${CATLIB}/linux/implementations/sys_accept.cpp
  ${CATLIB}/linux/implementations/sys_bind.cpp
  ${CATLIB}/linux/implementations/sys_connect.cpp
  ${CATLIB}/linux/implementations/sys_listen.cpp
  ${CATLIB}/linux/implementations/sys_recv.cpp
  ${CATLIB}/linux/implementations/sys_sendto.cpp
  ${CATLIB}/linux/implementations/sys_writev.cpp
  ${CATLIB}/linux/implementations/sys_readv.cpp
  ${CATLIB}/linux/implementations/sys_stat.cpp
  ${CATLIB}/linux/implementations/sys_fstat.cpp
  ${CATLIB}/linux/implementations/sys_tkill.cpp
  ${CATLIB}/linux/implementations/block_all_signals.cpp
  ${CATLIB}/linux/implementations/raise.cpp
  ${CATLIB}/linux/implementations/raise_here.cpp
  ${CATLIB}/linux/implementations/process.cpp
  ${CATLIB}/debug/implementations/breakpoint.cpp
  ${CATLIB}/debug/implementations/default_assert_handler.cpp
  ${CATLIB}/debug/implementations/verify.cpp
  ${CATLIB}/debug/implementations/assert.cpp
)

set(CAT_HEADER_FILES
  ${CATLIB}/algorithm/cat/algorithm
  ${CATLIB}/allocator/cat/allocator
  ${CATLIB}/allocator/cat/linear_allocator
  ${CATLIB}/allocator/cat/null_allocator
  ${CATLIB}/allocator/cat/page_allocator
  ${CATLIB}/allocator/cat/pool_allocator
  ${CATLIB}/arithmetic/cat/arithmetic
  ${CATLIB}/arithmetic/cat/arithmetic_interface
  ${CATLIB}/array/cat/array
  ${CATLIB}/atomic/cat/atomic
  ${CATLIB}/bit/cat/bit
  ${CATLIB}/bitset/cat/bitset
  ${CATLIB}/cast/cat/cast
  ${CATLIB}/collection/cat/collection
  ${CATLIB}/compare/cat/compare
  ${CATLIB}/debug/cat/debug
  ${CATLIB}/file/cat/file
  ${CATLIB}/format/cat/format
  ${CATLIB}/format/cat/detail/ftoa_dragonbox.hpp
  ${CATLIB}/format/cat/detail/itoa_jeaiii.hpp
  ${CATLIB}/functional/cat/functional
  ${CATLIB}/iterator/cat/iterator
  ${CATLIB}/iterator/cat/insert_iterators
  ${CATLIB}/limits/cat/limits
  ${CATLIB}/linux/cat/linux
  ${CATLIB}/list/cat/list
  ${CATLIB}/match/cat/match
  ${CATLIB}/math/cat/math
  ${CATLIB}/maybe/cat/maybe
  ${CATLIB}/memory/cat/memory
  ${CATLIB}/meta/cat/meta
  ${CATLIB}/notype/cat/notype
  ${CATLIB}/ring/cat/ring
  ${CATLIB}/runtime/cat/runtime
  ${CATLIB}/sanitizer/cat/sanitizer
  ${CATLIB}/scaredy/cat/scaredy
  ${CATLIB}/simd/cat/simd
  ${CATLIB}/simd/cat/detail/simd_impl.hpp
  ${CATLIB}/simd/cat/detail/simd_avx2.hpp
  ${CATLIB}/simd/cat/detail/simd_avx2_fwd.hpp
  ${CATLIB}/simd/cat/detail/simd_sse42.hpp
  ${CATLIB}/simd/cat/detail/simd_sse42_fwd.hpp
  ${CATLIB}/socket/cat/socket
  ${CATLIB}/span/cat/span
  ${CATLIB}/string/cat/string
  ${CATLIB}/thread/cat/thread
  ${CATLIB}/tui/cat/tui
  ${CATLIB}/tuple/cat/tuple
  ${CATLIB}/type_list/cat/type_list
  ${CATLIB}/unique/cat/unique
  ${CATLIB}/utility/cat/utility
  ${CATLIB}/variant/cat/variant
  ${CATLIB}/vec/cat/vec
  ${CATLIB}/x11/cat/x11
  ${CATLIB}/linux/implementations/syscall.tpp
  ${CATLIB}/linux/implementations/process.tpp
  ${CATLIB}/meta/implementations/constant_evaluate.tpp
  ${CATLIB}/meta/implementations/common_reference.tpp
  ${CATLIB}/simd/implementations/compare_implicit_length_strings.tpp
  ${CATLIB}/simd/implementations/compare_implicit_length_strings_return_index.tpp
  ${CATLIB}/simd/implementations/shuffle.tpp
  ${CATLIB}/simd/implementations/stream_in.tpp
  ${CATLIB}/string/implementations/string_length.tpp
  ${CATLIB}/bit/implementations/is_aligned.tpp
  ${CATLIB}/bit/implementations/align_up.tpp
  ${CATLIB}/bit/implementations/align_down.tpp
  ${CATLIB}/tuple/implementations/tuple_cat.tpp
  ${CATLIB}/enum/cat/enum
  PARENT_SCOPE
)
